# Content of pipeline.yaml
meta:
  import_tasks_from: pipeline.features.yaml

tasks:

  - source: src/data/fetch_yfinance_data.py
    product:
      nb: output/notebooks/fetch_yfinance_data.ipynb
      data: output/data/raw/yfinance_ticker_data-raw.csv
    params:
      query_params:
        rolling_window: '{{rolling_window}}'
        tickers: '{{tickers}}'

  - source: src/data/fetch_n_filter_gdelt_bq.py
    product:
      nb: output/notebooks/fetch_n_filter_gdelt_bq.ipynb
      data: output/data/raw/gdelt_gkg_bqdata-raw.csv
    params:
      query_params:
        rolling_window: '{{rolling_window}}'
        search_term: '{{search_term}}'
        bq_table_name: "{{bq_table_name}}"

        
  - source: src/data/clean_gdelt_data.py
    product:
      nb: output/notebooks/clean_gdelt_data.ipynb
      data: output/data/interim/gdelt_gkg_data-cleaned.csv
    params:
      path_params:
        sp_500_path: '{{sp_500_path}}'

  - source: src/visualization/visualize_gdelt.py
    product:
      nb: output/notebooks/visualize_gdelt.html

  - source: src/visualization/visualize_yfinance.py
    product:
      nb: output/notebooks/visualize_yfinance.html
    params:
      query_params:
        rolling_window: '{{rolling_window}}'
        tickers: '{{tickers}}'

  # Feature pipeline code will execute here.

  - source: src/models/train_model.py
    product:
      nb: output/notebooks/train_model.ipynb
      data: output/data/raw/model.pkl
    params:
      BATCH_SIZE: '{{BATCH_SIZE}}'
      BARS_COUNT: '{{BARS_COUNT}}'
      EPS_START: '{{EPS_START}}'
      EPS_FINAL: "{{EPS_FINAL}}"
      EPS_STEPS: '{{EPS_STEPS}}'
      GAMMA: '{{GAMMA}}'
      REPLAY_SIZE: '{{REPLAY_SIZE}}'
      REPLAY_INITIAL: '{{REPLAY_INITIAL}}'
      REWARD_STEPS: '{{REWARD_STEPS}}'
      LEARNING_RATE: '{{LEARNING_RATE}}'
      STATES_TO_EVALUATE: '{{STATES_TO_EVALUATE}}'
      cuda: '{{cuda}}'
      year: '{{year}}'
      run: '{{run}}'
